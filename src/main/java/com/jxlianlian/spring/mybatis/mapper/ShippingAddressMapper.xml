<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jxlianlian.spring.mybatis.dao.ShippingAddressMapper">
	<!-- Cache 配置 -->
	<cache eviction="FIFO" flushInterval="3600000" size="1024" />
	<resultMap id="BaseResultMap"
		type="com.jxlianlian.spring.mybatis.model.ShippingAddress">
		<id column="shipping_address_id" property="shippingAddressId"
			jdbcType="BIGINT" />
		<result column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="consignee" property="consignee" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="area" property="area" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="postcode" property="postcode" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		shipping_address_id, user_id, consignee, phone, area,
		address, postcode
	</sql>
	<select id="selectCountByUserId" resultType="java.lang.Integer"
		parameterType="java.lang.Long">
		select count(0)
		from shipping_address
		where user_id =
		#{userId,jdbcType=BIGINT}
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from shipping_address
		where shipping_address_id =
		#{shippingAddressId,jdbcType=BIGINT}
	</select>
	<select id="selectByUserId" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from shipping_address
		where user_id = #{userId,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		shipping_address
		where shipping_address_id =
		#{shippingAddressId,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.jxlianlian.spring.mybatis.model.ShippingAddress">
		insert into shipping_address
		(shipping_address_id, user_id, consignee,
		phone, area, address,
		postcode)
		values (#{shippingAddressId,jdbcType=BIGINT},
		#{userId,jdbcType=BIGINT},
		#{consignee,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR}, #{area,jdbcType=VARCHAR},
		#{address,jdbcType=VARCHAR},
		#{postcode,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.jxlianlian.spring.mybatis.model.ShippingAddress">
		insert into shipping_address
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="shippingAddressId != null">
				shipping_address_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="consignee != null">
				consignee,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="area != null">
				area,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="postcode != null">
				postcode,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="shippingAddressId != null">
				#{shippingAddressId,jdbcType=BIGINT},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="consignee != null">
				#{consignee,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="area != null">
				#{area,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="postcode != null">
				#{postcode,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.jxlianlian.spring.mybatis.model.ShippingAddress">
		update shipping_address
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=BIGINT},
			</if>
			<if test="consignee != null">
				consignee = #{consignee,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="area != null">
				area = #{area,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="postcode != null">
				postcode = #{postcode,jdbcType=VARCHAR},
			</if>
		</set>
		where shipping_address_id = #{shippingAddressId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.jxlianlian.spring.mybatis.model.ShippingAddress">
		update
		shipping_address
		set user_id = #{userId,jdbcType=BIGINT},
		consignee =
		#{consignee,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		area =
		#{area,jdbcType=VARCHAR},
		address = #{address,jdbcType=VARCHAR},
		postcode = #{postcode,jdbcType=VARCHAR}
		where shipping_address_id =
		#{shippingAddressId,jdbcType=BIGINT}
	</update>
</mapper>